version: '3.9'

# see .env file for the default value of the environment variables
services:
  elasticsearch:
    container_name: elasticsearch
    environment:
      - cluster.routing.allocation.disk.threshold_enabled=true
      - cluster.routing.allocation.disk.watermark.low=512mb
      - cluster.routing.allocation.disk.watermark.high=256mb
      - cluster.routing.allocation.disk.watermark.flood_stage=128mb
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms256m -Xmx256m
      - xpack.security.enabled=false
    image: elasticsearch:${ELASTICSEARCH_VERSION}
    networks:
      - testing-network
    expose:
      - 9200
  cassandra:
    image: cassandra:${CASSANDRA_VERSION}
    ports:
      - "9042:9042"
    healthcheck:
      test: [ "CMD", "cqlsh", "-u cassandra", "-p cassandra", "-e describe keyspaces" ]
      interval: 15s
      timeout: 30s
      retries: 10
    networks:
      - testing-network
  kafka:
    image: apache/kafka:latest
    hostname: kafka
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      # KRaft settings
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_LISTENERS: 'PLAINTEXT://kafka:9092,CONTROLLER://kafka:9093'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://kafka:9092'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@kafka:9093'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_NUM_PARTITIONS: 3
      CLUSTER_ID: 'ciKafkaCluster'
    networks:
      - testing-network
    healthcheck:
      test: ["CMD-SHELL", "nc -z localhost 9092 || exit 1"]
      interval: 5s
      timeout: 10s
      retries: 20
      start_period: 30s
  cadence:
    image: ubercadence/server:v1.2.16-auto-setup
    ports:
      - "8000:8000"
      - "8001:8001"
      - "8002:8002"
      - "8003:8003"
      - "7933:7933"
      - "7934:7934"
      - "7935:7935"
      - "7939:7939"
      - "7833:7833"
      - "7936:7936"
    environment:
      - "CASSANDRA_SEEDS=cassandra"
      - "DYNAMIC_CONFIG_FILE_PATH=config/dynamicconfig/development_es.yaml"
      - "ENABLE_ES=true"
      - "ES_SEEDS=elasticsearch"
      - "ES_VERSION=v7"
      - "KAFKA_SEEDS=kafka"
    depends_on:
      cassandra:
        condition: service_healthy
      kafka:
        condition: service_healthy
      elasticsearch:
        condition: service_started
    networks:
      - testing-network
  cadence-admin-tools:
    container_name: cadence-admin-tools
    depends_on:
      - cadence
    environment:
      - CADENCE_CLI_ADDRESS=cadence:7933
    image: ubercadence/cli:v1.2.16
    networks:
      - testing-network
    stdin_open: true
    tty: true
    volumes:
      - ./init-ci-cadence.sh:/etc/cadence/init-ci-cadence.sh
    entrypoint: sh -c "/etc/cadence/init-ci-cadence.sh"
  minio:
    container_name: minio
    image: minio/minio:${MINIO_VERSION:-latest}
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
      - MINIO_DOMAIN=minio
    command: server /data --console-address ":9001"
    networks:
      - testing-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3    
networks:
  testing-network:
    driver: bridge
    name: testing-network
